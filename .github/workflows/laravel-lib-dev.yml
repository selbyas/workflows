name: laravel lib ci dev

on:
  workflow_call:
    secrets:
      SATIS_URL:
        required: true
      SATIS_USERNAME:
        required: true
      SATIS_PASSWORD:
        required: true
      SLACK_WEBHOOK_URL:
        required: true
      FORGE_SATIS_WEBHOOK_URL:
        required: true
      SETASIGN_USERNAME:
        required: false
      SETASIGN_PASSWORD:
        required: false

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        php: [ 8.0 ]
        laravel: [ 8.*, 9.* ]
        include:
          - laravel: 8.*
            testbench: ^6.23
          - laravel: 9.*
            testbench: ^7.0

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.os }}

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - uses: actions/checkout@v2

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, sqlsrv, pdo_sqlsrv

      - name: 'Authenticate SelbySatis'
        run: composer config http-basic.${{secrets.SATIS_URL}} "${{secrets.SATIS_USERNAME}}" "${{secrets.SATIS_PASSWORD}}"

      - name: 'Authenticate setasign'
        env:
          SETASIGN_USERNAME: ${{ secrets.SETASIGN_USERNAME }}
        if: "${{ env.SETASIGN_USERNAME != '' }}"
        run: composer config http-basic.www.setasign.com "${{secrets.SETASIGN_USERNAME}}" "${{secrets.SETASIGN_PASSWORD}}"

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Setup Testbench
        run: composer require "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update --dev

      - name: Setup Laravel
        run: composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update

      - name: Install Laravel dependencies
        run: composer update "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --with-all-dependencies

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php${{ matrix.php }}-laravel${{ matrix.laravel }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php${{ matrix.php }}-laravel${{ matrix.laravel }}-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress

      - name: Detect installed Laravel version
        id: laravel_version
        run: |
          echo "::set-output name=LARAVEL_VERSION::$(echo "$(echo "$(composer show laravel/framework | grep versions | grep -Eow 'v[0-9]+' | sed 's/v//').*")")"
          echo "Installed version $(echo "$(echo "$(composer show laravel/framework | grep versions | grep -Eow 'v[0-9]+' | sed 's/v//').*")") / Expected version ${{ matrix.laravel }}"

      - name: Fail on incorrect Laravel version
        if: steps.laravel_version.outputs.LARAVEL_VERSION != matrix.laravel
        run: echo '::error::Incorrect Laravel version installed (${{ steps.laravel_version.outputs.LARAVEL_VERSION }})' && exit 1

      - name: Run test suite
        run: composer run-script test

      - name: Send Slack failure notification
        uses: act10ns/slack@v1.2.2
        if: failure()
        with:
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}