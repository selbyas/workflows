name: laravel tagged release

on:
  workflow_call:
    secrets:
      SATIS_URL:
        required: true
      SATIS_USERNAME:
        required: true
      SATIS_PASSWORD:
        required: true
      SLACK_WEBHOOK_URL:
        required: true
      FORGE_SATIS_WEBHOOK_URL:
        required: true
      SETASIGN_USERNAME:
        required: false
      SETASIGN_PASSWORD:
        required: false

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        php: [ 8.0 ]
        laravel: [ 8.*, 9.* ]
        include:
          - laravel: 8.*
            testbench: ^6.24
          - laravel: 9.*
            testbench: ^7.4

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.os }}

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache/files
          key: dependencies-laravel-${{ runner.os }}-${{ matrix.laravel }}-testbench-${{ matrix.testbench }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, sqlsrv, pdo_sqlsrv

      - name: 'Authenticate SelbySatis'
        run: composer config http-basic.${{secrets.SATIS_URL}} "${{secrets.SATIS_USERNAME}}" "${{secrets.SATIS_PASSWORD}}"

      - name: 'Authenticate Setasign'
        env:
          SETASIGN_USERNAME: ${{ secrets.SETASIGN_USERNAME }}
        if: "${{ env.SETASIGN_USERNAME != '' }}"
        run: composer config http-basic.www.setasign.com "${{secrets.SETASIGN_USERNAME}}" "${{secrets.SETASIGN_PASSWORD}}"

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: |
            composer require "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update --dev
            composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
            composer update --prefer-dist --no-interaction

      - name: Detect installed Laravel version
        id: laravel_version
        run: |
          echo "::set-output name=LARAVEL_VERSION::$(echo "$(echo "$(composer show laravel/framework | grep versions | grep -Eow 'v[0-9]+' | sed 's/v//').*")")"
          echo "Installed version $(echo "$(echo "$(composer show laravel/framework | grep versions | grep -Eow 'v[0-9]+' | sed 's/v//').*")") / Expected version ${{ matrix.laravel }}"

      - name: Fail on incorrect Laravel version
        if: steps.laravel_version.outputs.LARAVEL_VERSION != matrix.laravel
        run: echo '::error::Incorrect Laravel version installed (${{ steps.laravel_version.outputs.LARAVEL_VERSION }})' && exit 1

      - name: Run test suite
        run: composer run-script test

      - name: Send Slack failure notification
        uses: act10ns/slack@v1.2.2
        if: failure()
        with:
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  release:
    needs: [tests]
    runs-on: ubuntu-latest

    # Pushes with GITHUB_TOKEN like these will not trigger any workflows, even if they fit the criteria
    # Either we need to switch to using a PAT for checkout, or just accept that the RC tests should cover everything, 
    # and the satis webhook will pick up on the newly promoted prod version anyway.

    steps:
      - uses: actions/checkout@v3
      - name: Promote release candidate if tests pass
        run: |
          current="$(git tag -l --sort=v:refname | tail -1)"

          if [[ $current == v*-rc* ]]; then
            next=$(echo $current | awk '{split($0, items, "-"); n=split(items[1], segments, "."); segments[n]++; for(i in segments) printf segments[i] "."}' | sed "s/\.$//g")

            echo "Promoting $current to $next triggered by $GITHUB_ACTOR"

            git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
            git config user.name "$GITHUB_ACTOR"

            git checkout -b main
            
            git commit --allow-empty -m "promote release candidate $current to $next"
            git tag $next
            git push -u origin main
            git push --tags
          else
            echo "Current version does not seem to be a release candidate: $current"
          fi

      - name: Trigger SelbySatis build
        run: curl "${{ secrets.FORGE_SATIS_WEBHOOK_URL }}"